---
input: !pipe
output1: !pipe
output2: !pipe
output3: !pipe

inputSchema: !schema
  name: Input File Schema
  columns:
    - name: Name
      type: string
    - name: Count
      type: integer
    - name: Price
      type: decimal

countSchema: !schema
  name: Count Schema
  columns:
    - name: Count
      type: integer

validatingTransformer: !transformer
  name: Validating Transformer
  input: ->input
  variables:
    orderingProblem: false
    orderingProblemCount: 0
  expressions:
    - "#orderingProblem = #lastName > #inputRecord.Name"
    - "#orderingProblemCount = #orderingProblemCount + (#orderingProblem ? 1 : 0)"
    - "#lastName = #inputRecord.Name"
  outputConfigurations:
    - name: transformerOutput
      output: ->output1
      outputSchema: ->inputSchema
      recordName: outputRecord
      outputCondition: "!#orderingProblem"
      expressions:
        - "#outputRecord.Name = #inputRecord.Name"
        - "#outputRecord.Count = #inputRecord.Count"
        - "#outputRecord.Price = #inputRecord.Price"
    - name: transformerOrderOutput
      output: ->output2
      outputSchema: ->inputSchema
      recordName: outputRecord
      outputCondition: "#orderingProblem"
      expressions:
        - "#invalidRecord.Name = #inputRecord.Name"
        - "#invalidRecord.Count = #inputRecord.Count"
        - "#invalidRecord.Price = #inputRecord.Price"
    - name: transformerOrderCountOutput
      output: ->output3
      outputSchema: ->countSchema
      recordName: invalidCountRecord
      outputCondition: "#input.complete"
      expressions:
        - "#invalidCountRecord.Count = #orderingProblemCount"
        